/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*Universal selector will seelct each and every element on the page and then apply these declarations here to it*/

*,
*::after,
*::before {
    /* margin: are used to create space around elements, outside of any defined borders.*/
    margin: 0;
    /* padding: are used to generate space around an element's content, inside of any defined borders.*/
    padding: 0;
    box-sizing: inherit;
}

body {
    /*    This font-family will be inherited by all the child elements of the body*/
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    /*    1.7 times bigger than the predefined line height*/
    line-height: 1.7;
    color: #777;
    padding: 3rem;
    /* box-sizing: border-box: change the box model so that the borders and the paddings are no longer added to the total width or the total height that we specify for a box*/
    box-sizing: border-box;
}

html {
    font-size: 62.5%;
}

.btn:link,
.btn:visited{
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative;
    font-size: 1.6rem;
}

.btn:hover{
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active{
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
    background-color: #fff;
    color: #777;
}

.btn::after{
    content: "";
    display: inline-block;
    border-radius: 10rem;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn:hover::after{
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--white::after{
    background-color: #fff;
}

.btn--animated{
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards;
}

.header {
    /*    Relative to 95% of the height of the viewport**/
    height: 95vh;
    /*    CSS gradients let you display smooth transitions between two or more specified colors.*/
    background-image: linear-gradient(
        to right bottom, 
        rgba(126, 213, 111, 0.8), 
        rgba(40, 180, 131, 0.8)), 
    url(../img/hero.jpg);
    /*    cover: whatever the width of the viewport, or the element, it wil always try to fit the element inside of the box.*/
    background-size: cover;
    /*    whatever the viewport size is, this top of the image here always stays at the top of the container.*/
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    position: relative;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
    backface-visibility: hidden;
    margin-bottom: 6rem;
}

.heading-primary--main{
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* 
    animation-delay: 3s;
    animation-iteration-count: 3; 
    */
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;
    animation: moveInRight 1s ease-out;
}

.header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /*translate: shift 50% of width to the left ,shift 50% of the height to the top*/
    transform: translate(-50%, -50%);
    text-align: center;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);

    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);

    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);

    }
}



 














